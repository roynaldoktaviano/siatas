generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  id           String       @id @default(uuid())
  email        String       @unique @db.VarChar(255)
  name         String       @db.VarChar(255)
  password     String       @db.VarChar(255)
  role         RoleUser     @default(mahasiswa)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  dosen        Dosen?
  koordinator  Koordinator?
  mahasiswa    Mahasiswa?
  auth_session Session[]
}

model Bidang {
  id        Int       @id @default(autoincrement())
  nama      String    @db.VarChar(255)
  deskripsi String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  topikTA   TopikTA[]
  dosen     Dosen[]   @relation("BidangDosen")
}

model Mahasiswa {
  id            Int            @id @default(autoincrement())
  nim           String         @unique @db.VarChar(20)
  jurusan       String         @db.VarChar(255)
  angkatan      Int
  usersId       String         @unique
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  isTA          Boolean        @default(false)
  users         Users          @relation(fields: [usersId], references: [id])
  pendaftaranTA PendaftaranTA?
}

model Dosen {
  id        Int       @id @default(autoincrement())
  nidn      String    @unique @db.VarChar(20)
  usersId   String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     Users     @relation(fields: [usersId], references: [id])
  bidang    Bidang[]  @relation("BidangDosen")
  topikTA   TopikTA[] @relation("DosenPembimbing")
}

model Koordinator {
  id        Int      @id @default(autoincrement())
  nidn      String   @unique @db.VarChar(20)
  usersId   String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     Users    @relation(fields: [usersId], references: [id])
}

model TopikTA {
  id            Int            @id @default(autoincrement())
  judul         String         @db.VarChar(255)
  deskripsi     String
  bidangId      Int
  pendaftaranTA PendaftaranTA?
  bidang        Bidang         @relation(fields: [bidangId], references: [id])
  dosen         Dosen[]        @relation("DosenPembimbing")
}

model PendaftaranTA {
  id            Int       @id @default(autoincrement())
  mahasiswaId   Int       @unique
  topikTAId     Int       @unique
  tanggalDaftar DateTime  @default(now())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  mahasiswa     Mahasiswa @relation(fields: [mahasiswaId], references: [id])
  topikTA       TopikTA   @relation(fields: [topikTAId], references: [id])
}

model Session {
  id          String   @id
  idleExpires BigInt   @default(0)
  userId      String
  expiresAt   DateTime @default(now())
  user        Users    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

enum RoleUser {
  koordinator
  dosen
  mahasiswa
}
